#!/bin/bash

# shell script to 
# - start a virtual X display,  
# - monitor the switch we've added,
# - start a web browser, 
# - log in to the Netgear Arlo website, and
# - change the "mode" (set motion on or off) of our camera

# L. Shustek, 10 Aug 2015

echo starting arlo camera controller

# If not test mode, start the virual X display server
if [ "$1" != "test" ]; then
 export DISPLAY=':99'
 echo starting Xvnc virtual display
 vncserver :99
fi

# set up the switch and light I/O pins
echo initilizing switch and light

# GPIO9 is input with pullup: "up" momentary toggle switch leg
echo 9 | sudo tee /sys/class/gpio/export > /dev/null
echo "in" | sudo tee /sys/class/gpio/gpio9/direction > /dev/null
echo "high" | sudo tee /sys/class/gpio/gpio9/direction > /dev/null

#GPIO10 is input with pullup: "down" momentary toggle switch leg
echo 10 | sudo tee /sys/class/gpio/export > /dev/null
echo "in" | sudo tee /sys/class/gpio/gpio10/direction > /dev/null
echo "high" | sudo tee /sys/class/gpio/gpio10/direction > /dev/null

#GPIO11 is output: a red LED through a 680 ohm resistor to ground
echo 11 | sudo tee /sys/class/gpio/export > /dev/null
echo "out" | sudo tee /sys/class/gpio/gpio11/direction > /dev/null
light=0

#function to sleep n+1 seconds while flashing the light
#(The light is left in its original state, $light.)
sleepn () {
 time="$1"
 sleep 1 # we do the n+1 sleep to make the light stutter between phases
 while [ $time -gt 0 ]; do
   echo $((1-$light)) > /sys/class/gpio/gpio11/value
   sleep 0.5
   echo $light > /sys/class/gpio/gpio11/value
   sleep 0.5
   time=$(($time-1))
 done
}

#function to start the web browser and get ready to change mode
startbrowser () {
 echo 1 > /sys/class/gpio/gpio11/value
 light=1
 echo starting epiphany
 if [ "$1" != "test" ]; then
  export DISPLAY=":99"
  epiphany --display=":99" "https://arlo.netgear.com/#/login" 2> browser_errs & 
 else 
  ## export DISPLAY=":0"
  epiphany "https://arlo.netgear.com/#/login" 2> browser_errs &
 fi
 sleepn 20
 echo finding browser window
 ww=$(xdotool search --onlyvisible --class epiphany)
 echo found window $ww
 echo activating window $ww
 xdotool windowactivate $ww
 sleepn 1
 echo moving window
 xdotool windowmove --sync $ww 0 0
 sleepn 1
 echo resizing window
 xdotool windowsize --sync $ww 600 600
 sleepn 2
 echo logging in
 xdotool mousemove --sync 428 388 click 1
 sleepn 15
 echo going to mode-set page
 # (coordinates assume an Adobe Flash warning is there)
 xdotool mousemove --sync 340 635 click 1
 sleepn 10
}

#function to logoff and stop the browser
stopbrowser () {
 sleepn 3
 echo logging off
 xdotool mousemove --sync 563 145 click 1
 sleepn 5
 echo closing browser
 xdotool mousemove --sync 580 48 click 1
 sleepn 3
 echo 0 > /sys/class/gpio/gpio11/value
 light=0
 echo waiting for switch
}

# announce our presence by flashing the light 3 times
 sleepn 3

# wait for a switch push, up or down
echo waiting for switch
while true; do
 read val < /sys/class/gpio/gpio9/value
 if (( val == 0 )); then
  echo switch was pushed up
  startbrowser $1
  echo setting \"motion on\" mode
  xdotool mousemove --sync 25 307 click 1
  stopbrowser
  fi
read val < /sys/class/gpio/gpio10/value
 if (( val == 0 )); then
  echo switch was pushed down
  startbrowser $1
  echo setting \"motion off\" mode
  xdotool mousemove --sync 25 259 click 1
  stopbrowser
  fi
done
